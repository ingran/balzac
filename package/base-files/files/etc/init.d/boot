#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

uci_apply_defaults() {
	. /lib/functions/system.sh

	cd /etc/uci-defaults || return 0
	files="$(ls)"
	[ -z "$files" ] && return 0
	mkdir -p /tmp/.uci
	for file in $files; do
		( . "./$(basename $file)" ) && rm -f "$file"
	done
	uci commit
}

boot() {
	/usr/sbin/statusledctrl LB_GYR &
	
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && /bin/mount -o noatime -t debugfs debugfs /sys/kernel/debug

	# Start these two scripts in parallel because loading modules is mainly
	# I/O bound and CPU is not used 100% in that time.
	(/etc/init.d/i2c_gpio start; /etc/init.d/log start) &

	/sbin/kmodloader
	# Only load mmc_spi when there is a uSD card reader
	if [ "$(uci get -q hwinfo.hwinfo.microsd)" = "1" ]; then
		insmod mmc_spi
	fi

	uci_apply_defaults
	
	# temporary hack until configd exists
	#/sbin/reload_config

	start

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}
	
	# create symlink for RS485 UART
	[ -e /dev/ttyATH0 ] && ln -s /dev/ttyATH0 /dev/rs485
}
