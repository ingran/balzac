#!/bin/sh

# This is experimental script only! I did it just for
# testing alternative ways to extract router status.
# Script reports status parameters as well as updates
# temporary status file to reduce AT request rate for GSMD.

show_options()
{
	# TODO: implement multiple options
	printf "usage: sysget <OPTION>\n"
	printf "  imei\n"
	printf "  model\n"
	printf "  manuf\n"
	printf "  revision\n"
	printf "  serial\n"
	printf "  simstate\n"
	printf "  pinstate\n"
	printf "  imsi\n"
	printf "  netstate\n"
	printf "  signal\n"
	printf "  operator\n"
	printf "  opernum\n"
	printf "  connstate\n"
	printf "  conntype\n"
	printf "  help\n"
}

if [ "$#" != "1" ]
then
	show_options
	return 1
else
	case "$1" in
		imei)
			echo "$(gsmctl --imei )"
			;;
		model)
			echo "$(gsmctl --model )"
			;;
		manuf)
			echo "$(gsmctl --manuf )"
			;;
		revision)
			echo "$(gsmctl --revision )"
			;;
		serial)
			echo "$(gsmctl --serial )"
			;;
		simstate)
			echo "$(gsmctl --simstate )"
			;;
		pinstate)
			echo "$(gsmctl --pinstate )"
			;;
		imsi)
			echo "$(gsmctl --imsi )"
			;;
		netstate)
			echo "$(gsmctl --netstate )"
			;;
		signal)
			echo "$(gsmctl --signal )"
			;;
		operator)
			echo "$(gsmctl --operator )"
			;;
		opernum)
			echo "$(gsmctl --opernum )"
			;;
		connstate)
			echo "$(gsmctl --connstate )"
			;;
		conntype)
			echo "$(gsmctl --conntype )"
			;;
		temperature)
			tem=`gsmctl --temp`
			te=$((tem/10))
			echo "$te"
			;;
		help)
			show_options
			;;
		*)
			show_options
			return 1
			;;
	esac
fi

return 0
