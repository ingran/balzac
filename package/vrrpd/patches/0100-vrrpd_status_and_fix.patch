--- a/vrrpd.c
+++ b/vrrpd.c
@@ -222,11 +222,42 @@ static int rcvhwaddr_op( char *ifname, c
 }
 
 /****************************************************************
+ NAME	: open_sock				00/02/07 12:40:00
+ AIM	: open the socket and join the multicast group.
+ REMARK	:
+****************************************************************/
+static int open_sock( vrrp_rt *vsrv )
+{
+	struct	ip_mreq req;
+	int	ret;
+	/* open the socket */
+	vsrv->sockfd = socket( AF_INET, SOCK_RAW, IPPROTO_VRRP );
+	if( vsrv->sockfd < 0 ){
+		int	err = errno;
+		VRRP_LOG(("cant open raw socket. errno=%d. (try to run it as root)\n"
+						, err));
+		return -1;
+	}
+	/* join the multicast group */
+	memset( &req, 0, sizeof (req));
+	req.imr_multiaddr.s_addr = htonl(INADDR_VRRP_GROUP);
+	req.imr_interface.s_addr = htonl(vsrv->vif.ipaddr);
+	ret = setsockopt (vsrv->sockfd, IPPROTO_IP, IP_ADD_MEMBERSHIP,
+			       (char *) &req, sizeof (struct ip_mreq));
+	if( ret < 0 ){
+		int	err = errno;
+		VRRP_LOG(("cant do IP_ADD_MEMBERSHIP errno=%d\n",err));
+		return -1;
+	}
+	return 0;
+}
+
+/****************************************************************
  NAME	: hwaddr_set				00/02/08 06:51:32
  AIM	:
  REMARK	: linux refuse to change the hwaddress if the interface is up
 ****************************************************************/
-static int hwaddr_set( char *ifname, char *addr, int addrlen )
+static int hwaddr_set( char *ifname, char *addr, int addrlen, int st, vrrp_rt *vsrv )
 {
 	struct ifreq	ifr;
 	int		fd	= socket(AF_INET, SOCK_DGRAM, 0);
@@ -235,6 +266,10 @@ static int hwaddr_set( char *ifname, cha
 	if (fd < 0) 	return (-1);
 	strncpy(ifr.ifr_name, ifname, sizeof(ifr.ifr_name));
 	/* get the flags */
+	if (!strcasecmp(ifname, "br-lan") && st == 1){
+		system("/sbin/ifdown lan");
+		system("/sbin/ifup lan");
+	}
 	ret = ioctl(fd, SIOCGIFFLAGS, (char *)&ifr);
 	if( ret )	goto end;
 	flags = ifr.ifr_flags;
@@ -253,8 +288,13 @@ static int hwaddr_set( char *ifname, cha
 	if( ret )	goto end;
 end:;
 if( ret )	printf("error errno=%d\n",errno);
-
 	close(fd);
+	if (!strcasecmp(ifname, "br-lan") && st == 1){
+		close(fd);
+		if( open_sock( vsrv ) ){
+			return -1;
+		}
+	}
 	return ret;
 }
 
@@ -340,6 +380,56 @@ static int vrrp_hd_len( vrrp_rt *vsrv )
 }
 
 /****************************************************************
+ NAME	: state_gotomaster			00/02/07 00:15:26
+ AIM	:
+ REMARK	: called when the state is now MASTER
+****************************************************************/
+char *ipaddr_to_str(uint32_t ipaddr)
+{
+	static char temp_ipaddr[32];
+	snprintf(temp_ipaddr, 32, "%d.%d.%d.%d", 
+			(unsigned char)(ipaddr & 0xff),
+			(unsigned char)((ipaddr >> 8) & 0xff),
+			(unsigned char)((ipaddr >> 16) & 0xff),
+			(unsigned char)((ipaddr >> 24) & 0xff));
+	return temp_ipaddr;
+}
+
+/****************************************************************
+********************write master ip to file**********************
+****************************************************************/
+static void write_ip_to_file( vrrp_rt *vsrv)
+{
+	FILE *pCMD, *f;
+	char BufferInfo[100];
+	char status[10];
+	if(!strcmp(vsrv->vif.ifname , "br-lan")){
+		pCMD = fopen("/tmp/vrrpd_lan_log", "r");
+	}else{
+		pCMD = fopen("/tmp/vrrpd_wan_log", "r");
+	}
+	if (pCMD == NULL){
+		printf("Error opening file!\n");
+	}else{
+		fgets(BufferInfo, 100, pCMD);
+		BufferInfo[strlen(BufferInfo)-1] = '\0';
+		strncpy(status, BufferInfo, sizeof(status));
+		fclose(pCMD);
+		if(!strcmp(vsrv->vif.ifname , "br-lan")){
+			f = fopen("/tmp/vrrpd_lan_log", "wb");
+		}else{
+			f = fopen("/tmp/vrrpd_wan_log", "wb");
+		}
+		if (f == NULL){
+			printf("Error opening file!\n");
+		}else{
+			fprintf(f, "%s\n%s\n",status, ipaddr_to_str(master_ipaddr));
+			fclose(f);
+		}
+	}
+}
+
+/****************************************************************
  NAME	: vrrp_in_chk				00/02/02 12:54:54
  AIM	: check a incoming packet. return 0 if the pkt is valid, != 0 else
  REMARK	: rfc2338.7.1
@@ -408,6 +498,7 @@ static int vrrp_in_chk( vrrp_rt *vsrv, s
 
 	/* Scott added 9-4-02 */
 	master_ipaddr = ip->saddr;
+	write_ip_to_file(vsrv);
 	return 0;
 }
 
@@ -875,29 +966,36 @@ struct m_arphdr
 
 
 /****************************************************************
- NAME	: state_gotomaster			00/02/07 00:15:26
- AIM	:
- REMARK	: called when the state is now MASTER
+***********************write info to file************************
 ****************************************************************/
-char *ipaddr_to_str(uint32_t ipaddr)
+static void write_to_file(vrrp_rt *vsrv, char status[10])
 {
-	static char temp_ipaddr[32];
-	snprintf(temp_ipaddr, 32, "%d.%d.%d.%d", 
-			(unsigned char)(ipaddr & 0xff),
-			(unsigned char)((ipaddr >> 8) & 0xff),
-			(unsigned char)((ipaddr >> 16) & 0xff),
-			(unsigned char)((ipaddr >> 24) & 0xff));
-	return temp_ipaddr;
+	FILE *f;
+	if(!strcmp(vsrv->vif.ifname , "br-lan")){
+		f = fopen("/tmp/vrrpd_lan_log", "wb");
+	}else{
+		f = fopen("/tmp/vrrpd_wan_log", "wb");
+	}
+	if (f == NULL){
+		printf("Error opening file!\n");
+	}else{
+		if(!strcmp(status , "Master")){
+			fprintf(f, "%s\n\n",status);
+		}else{
+			fprintf(f, "%s\n%s\n",status, ipaddr_to_str(master_ipaddr));
+		}
+		fclose(f);
+	}
 }
 
 static void state_goto_master( vrrp_rt *vsrv )
 {
 	int	i;
 	vrrp_if	*vif = &vsrv->vif;
-
+	char status[10];
 	/* set the VRRP MAC address -- rfc2338.7.3 */
 	if( !vsrv->no_vmac ){
-		hwaddr_set( vif->ifname, vrrp_hwaddr, sizeof(vrrp_hwaddr) );
+		hwaddr_set( vif->ifname, vrrp_hwaddr, sizeof(vrrp_hwaddr), 0, vsrv);
 		rcvhwaddr_op( vif->ifname, vif->hwaddr, sizeof(vif->hwaddr), 1);
 	}
 	/* add the ip addresses */
@@ -913,6 +1011,8 @@ static void state_goto_master( vrrp_rt *
 	vsrv->state = VRRP_STATE_MAST;
 	vrrpd_log(LOG_WARNING, "VRRP ID %d on %s: %s%swe are now the master router.", vsrv->vrid, vif->ifname,
 			master_ipaddr ? ipaddr_to_str(master_ipaddr) : "", master_ipaddr ? " is down, " : "");
+	strcpy(status, "Master");
+	write_to_file(vsrv, status);
 }
 
 /****************************************************************
@@ -927,7 +1027,7 @@ static void state_leave_master( vrrp_rt
 
 	/* restore the original MAC addresses */
 	if( !vsrv->no_vmac ){
-		hwaddr_set( vif->ifname, vif->hwaddr, sizeof(vif->hwaddr) );
+		hwaddr_set( vif->ifname, vif->hwaddr, sizeof(vif->hwaddr), 1, vsrv );
 		rcvhwaddr_op( vif->ifname, vif->hwaddr, sizeof(vif->hwaddr), 0);
 	}
 	/* remove the ip addresses */
@@ -956,6 +1056,7 @@ static void state_leave_master( vrrp_rt
 ****************************************************************/
 static void state_init( vrrp_rt *vsrv )
 {
+	char status[10];
 	if( vsrv->priority == VRRP_PRIO_OWNER 
 			|| vsrv->wantstate == VRRP_STATE_MAST ){
 		state_goto_master( vsrv );
@@ -965,6 +1066,9 @@ static void state_init( vrrp_rt *vsrv )
 		vsrv->state = VRRP_STATE_BACK;
 		vrrpd_log(LOG_WARNING, "VRRP ID %d on %s: %s%swe are now a backup router.", vsrv->vrid, vsrv->vif.ifname,
 			master_ipaddr ? ipaddr_to_str(master_ipaddr) : "", master_ipaddr ? " is up, " : "");
+
+		strcpy(status, "Backup");
+		write_to_file(vsrv, status);
 	}
 }
 
@@ -1000,6 +1104,7 @@ static void state_back( vrrp_rt *vsrv )
 ****************************************************************/
 static void state_mast( vrrp_rt *vsrv )
 {
+	char status[10];
 	char		buf[300];	/* WORK: lame ! */
 	int		len	= vrrp_read( vsrv, buf, sizeof(buf) );
 	struct iphdr	*iph	= (struct iphdr *)buf;
@@ -1027,41 +1132,12 @@ be_backup:
 		vsrv->state	= VRRP_STATE_BACK;
 		vrrpd_log(LOG_WARNING, "VRRP ID %d on %s: %s%swe are now a backup router.", vsrv->vrid, vsrv->vif.ifname,
 			master_ipaddr ? ipaddr_to_str(master_ipaddr) : "", master_ipaddr ? " is up, " : "");
-	}
-}
 
-/****************************************************************
- NAME	: open_sock				00/02/07 12:40:00
- AIM	: open the socket and join the multicast group.
- REMARK	:
-****************************************************************/
-static int open_sock( vrrp_rt *vsrv )
-{
-	struct	ip_mreq req;
-	int	ret;
-	/* open the socket */
-	vsrv->sockfd = socket( AF_INET, SOCK_RAW, IPPROTO_VRRP );
-	if( vsrv->sockfd < 0 ){
-		int	err = errno;
-		VRRP_LOG(("cant open raw socket. errno=%d. (try to run it as root)\n"
-						, err));
-		return -1;
-	}
-	/* join the multicast group */
-	memset( &req, 0, sizeof (req));
-	req.imr_multiaddr.s_addr = htonl(INADDR_VRRP_GROUP);
-	req.imr_interface.s_addr = htonl(vsrv->vif.ipaddr);
-	ret = setsockopt (vsrv->sockfd, IPPROTO_IP, IP_ADD_MEMBERSHIP,
-			       (char *) &req, sizeof (struct ip_mreq));
-	if( ret < 0 ){
-		int	err = errno;
-		VRRP_LOG(("cant do IP_ADD_MEMBERSHIP errno=%d\n",err));
-		return -1;
+		strcpy(status, "Backup");
+		write_to_file(vsrv, status);
 	}
-	return 0;
 }
 
-
 /****************************************************************
  NAME	: signal_end				00/05/10 23:20:36
  AIM	:
